{"version":3,"sources":["services/persons.js","components/Search.js","components/PersonForm.js","components/People.js","components/Notification.js","App.js","index.js"],"names":["baseURL","service","getAll","axios","get","then","res","data","create","newObject","post","update","id","put","remove","delete","Search","state","search","setSearch","onChange","event","target","value","PersonForm","newName","setNewName","newNumber","setNewNumber","persons","setPersons","setMessage","onSubmit","preventDefault","personsCopy","slice","existing","find","person","name","toLowerCase","trim","number","alert","window","confirm","personServices","text","type","setTimeout","personObject","resPerson","concat","Person","info","deletePerson","onClick","People","foundPersons","allPersons","Number","filter","catch","error","length","map","Notification","message","className","App","personArray","searchTerm","useState","useEffect","resPersons","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0acfedcc.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"/api/persons\";\n\nfunction getAll() {\n  const req = axios.get(baseURL);\n  return req.then(res => res.data);\n}\n\nfunction create(newObject) {\n  const req = axios.post(baseURL, newObject);\n  return req.then(res => res.data);\n}\n\nfunction update(id, newObject) {\n  const req = axios.put(`${baseURL}/${id}`, newObject);\n  return req.then(res => res.data);\n}\n\nfunction remove(id) {\n  const req = axios.delete(`${baseURL}/${id}`);\n  return req.then(res => res.data);\n}\n\nlet service = { getAll, create, update, remove };\n\nexport default service;","import React from \"react\";\n\nconst Search = ({ state }) => {\n  const {search, setSearch} = state;\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value);\n  }\n\n  return (\n    <div>\n      Search: <input onChange={handleSearch} value={search}/>\n    </div>\n  )\n}\n\nexport default Search;","import React from \"react\";\n\nimport personServices from \"../services/persons\";\n\nfunction PersonForm({ state }) {\n  const { newName, setNewName, newNumber, setNewNumber, persons, setPersons, setMessage } = state;\n\n  function handleNameInput(event) {\n    setNewName(event.target.value);\n  }\n\n  function handleNumberInput(event) {\n    setNewNumber(event.target.value);\n  }\n\n  function addPerson(event) {\n    event.preventDefault();\n\n    const personsCopy = persons.slice();\n    const existing = personsCopy.find(person => person.name.toLowerCase() === newName.trim().toLowerCase());\n\n    if (existing) {\n      if (existing.number === newNumber.trim()) {\n        alert(`There is already an entry for ${newName} with the same number.`);\n        return null;\n\n      } else {\n        if (window.confirm(`There is already an entry for ${existing.name}. Update number?`)) {\n          existing.number = newNumber.trim();\n          personServices\n            .update(existing.id, existing)\n            .then(() => {\n              setPersons(personsCopy);\n              setNewName(\"\");\n              setNewNumber(\"\");\n              setMessage({\n                text: `Updated ${existing.name}'s phone number.`,\n                type: \"success\"\n              });\n              setTimeout(() => setMessage({text: null}), 3000);\n            });\n          return true;\n\n        } else {\n          return null;\n        }\n      }\n    }\n\n    const personObject = {\n      name: newName.trim(),\n      number: newNumber.trim()\n    };\n\n    personServices\n      .create(personObject)\n      .then(resPerson => {\n        setPersons(persons.concat(resPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setMessage({\n          text: `Added ${newName} to phonebook.`,\n          type: \"success\"\n        });\n        setTimeout(() => setMessage({text: null}), 3000);\n      });\n  }\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        Name: <input onChange={handleNameInput} value={newName} />\n        Number: <input onChange={handleNumberInput} value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add / edit</button>\n      </div>\n    </form>\n  );\n}\n\nexport default PersonForm;","import React from \"react\";\n\nimport personServices from \"../services/persons\";\n\nfunction Person({ info, deletePerson }) {\n  return (\n    <p>\n      {info.name} - {info.number} -\n      <button onClick={deletePerson} value={info.id}>delete</button>\n    </p>\n  );\n}\n\nfunction People({ foundPersons, allPersons, setPersons, setMessage }) {\n  function deletePerson(event) {\n    let id = Number(event.target.value);\n    let person = allPersons.find(person => person.id === id);\n\n    if (window.confirm(`Delete ${person.name} from phonebook?`)) {\n      personServices\n        .remove(id)\n        .then(() => {\n          setMessage({\n            text: `Deleted ${person.name} from phonebook.`,\n            type: \"success\"\n          });\n          setTimeout(() => setMessage({text: null}), 3000);\n          setPersons(allPersons.filter(person => person.id !== id));\n        })\n        .catch(error => {\n          setMessage({\n            text: `${person.name}'s information was already deleted from server.`,\n            type: \"error\"\n          });\n          setTimeout(() => setMessage({ text: null }), 5000);\n          setPersons(allPersons.filter(person => person.id !== id));\n        });\n    }\n  }\n\n  if (foundPersons.length > 0) {\n    return (\n      <>\n        {foundPersons.map(person => <Person key={person.id} info={person} deletePerson={deletePerson} />)}\n      </>\n    );\n  } else {\n    return (\n      <p>No name or number contains the search term.</p>\n    );\n  }\n}\n\nexport default People;","import React from \"react\";\n\nfunction Notification({ message }) {\n  if (message.text === null) {\n    return null;\n  }\n\n  return (\n    <div className={message.type}>\n      {message.text}\n    </div>\n  )\n}\n\nexport default Notification;","import React, { useEffect, useState } from 'react';\nimport \"./index.css\"\n\nimport personServices from \"./services/persons\";\n\nimport Search from \"./components/Search\";\nimport PersonForm from \"./components/PersonForm\";\nimport People from \"./components/People\";\nimport Notification from './components/Notification';\n\n\nfunction App() {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ search, setSearch ] = useState(\"\");\n  const [ message, setMessage ] = useState({text: null, type: \"success\"});\n\n  useEffect(()=> {\n    personServices\n      .getAll()\n      .then(resPersons => {\n        setPersons(resPersons);\n      });\n  }, []);\n\n  const searchResult = (personArray, searchTerm) => {\n    searchTerm = searchTerm.toLowerCase();\n    return personArray.filter(person => {\n      return (person.name.toLowerCase().includes(searchTerm) || person.number?.includes(searchTerm));\n    });\n  }; \n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <Search state={{search, setSearch}}/>\n      <h2>Add person or edit number</h2>\n      <PersonForm state={{newName, setNewName, newNumber, setNewNumber, persons, setPersons, setMessage}}/>\n      <h2>People</h2>\n      <People foundPersons={searchResult(persons, search)} allPersons={persons} setPersons={setPersons} setMessage={setMessage} />\n    </div>\n  );\n};\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}